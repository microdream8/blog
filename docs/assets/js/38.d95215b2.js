(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{205:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"webpack学习-云皓"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack学习-云皓"}},[this._v("#")]),this._v(" webpack学习-云皓")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n    entry: './src/index.js', //入口文件，src下的index.js\n    output: {\n        path: path.join(__dirname, 'dist'), // 出口目录，dist文件\n        filename: '[name].[hash].js' //这里name就是打包出来的文件名，因为是单入口，就是main，多入口下回分解\n    },\n    module: {},\n    plugin: {},\n    devServer: {}\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("devServer: {\n    contentBase: path.join(__dirname, \"dist\"), //静态文件根目录,与output路径一致，使其build打包后的文件直接作用在起的服务的内存中\n    port: 9090, // 端口\n    host: 'localhost',\n    overlay: true,\n    compress: true // 服务器返回浏览器的时候是否启动gzip压缩\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("HtmlWebpackPlugin\n这个plugin曝光率很高，他主要有两个作用\n\n为html文件中引入的外部资源如script、link动态添加每次compile后的hash，防止引用缓存的外部文件问题\n可以生成创建html入口文件，比如单页面可以生成一个html文件入口，配置N个html-webpack-plugin可以生成N个页面入口\n\n\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);