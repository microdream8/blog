(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{272:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"统一代码风格工具-editorconfig"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统一代码风格工具-editorconfig"}},[t._v("#")]),t._v(" 统一代码风格工具 editorconfig")]),t._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("p",[t._v("在团队开发中，统一的代码格式是必要的。但是不同开发人员的代码风格不同，代码编辑工具的默认格式也不相同，这样就造成代码的differ。而editorConfig可以帮助开发人员在不同的编辑器和IDE中定义和维护一致的编码风格。本文将详细介绍统一代码风格工具editorConfig")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("editorConfig不是什么软件，而是一个名称为.editorconfig的自定义文件。该文件用来定义项目的编码规范，编辑器的行为会与.editorconfig 文件中定义的一致，并且其优先级比编辑器自身的设置要高，这在多人合作开发项目时十分有用而且必要")]),t._v(" "),s("p",[t._v("有些编辑器默认支持editorConfig，如webstorm；而有些编辑器则需要安装editorConfig插件，如ATOM、Sublime、VS Code等")]),t._v(" "),s("p",[t._v("当打开一个文件时，EditorConfig插件会在打开文件的目录和其每一级父目录查找.editorconfig文件，直到有一个配置文件root=true")]),t._v(" "),s("p",[t._v("EditorConfig的配置文件是从上往下读取的并且最近的EditorConfig配置文件会被最先读取. 匹配EditorConfig配置文件中的配置项会按照读取顺序被应用,所以最近的配置文件中的配置项拥有优先权")]),t._v(" "),s("p",[t._v("如果.editorconfig文件没有进行某些配置，则使用编辑器默认的设置")]),t._v(" "),s("h2",{attrs:{id:"文件语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件语法"}},[t._v("#")]),t._v(" 文件语法")]),t._v(" "),s("p",[t._v("editorConfig配置文件需要是UTF-8字符集编码的, 以回车换行或换行作为一行的分隔符")]),t._v(" "),s("p",[t._v("斜线(/)被用作为一个路径分隔符，井号(#)或分号(;)被用作于注释. 注释需要与注释符号写在同一行")]),t._v(" "),s("h3",{attrs:{id:"通配符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符"}},[t._v("#")]),t._v(" 通配符")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("                匹配除"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("之外的任意字符串\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("               匹配任意字符串\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("                匹配任意单个字符\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("           匹配name中的任意一个单一字符\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("          匹配不存在name中的任意一个单一字符\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("匹配给定的字符串中的任意一个")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("用逗号分隔")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   　匹配num1到num2之间的任意一个整数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 这里的num1和num2可以为正整数也可以为负整数\n")])])]),s("h3",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("indent_style    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("设置缩进风格")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab是硬缩进，space为软缩进"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nindent_size     用一个整数定义的列数来设置缩进的宽度，如果indent_style为tab，则此属性默认为tab_width\ntab_width       用一个整数来设置tab缩进的列数。默认是indent_size\nend_of_line     设置换行符，值为lf、cr和crlf\ncharset         设置编码，值为latin1、utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("、utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bom、utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("be和utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("le，不建议使用utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bom\ntrim_trailing_whitespace  设为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("表示会去除换行行首的任意空白字符。\ninsert_final_newline      设为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("表示使文件以一个空白行结尾\nroot        　　　表示是最顶层的配置文件，发现设为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("时，才会停止查找"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("editorconfig文件 \n")])])]),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),s("p",[t._v("下面的实例中使用 4 个空格来缩进，并不是说按一下空格会自动打出 4 个空格来，也不是说要连按 4 下空格；而是按 tab 键时，编辑器会自动输出 4 个空格的宽度，而不是之前默认的制表符 (\\t)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# editorconfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org\n\nroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ncharset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\nindent_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nindent_style "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" space\ninsert_final_newline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ntrim_trailing_whitespace "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntrim_trailing_whitespace "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);