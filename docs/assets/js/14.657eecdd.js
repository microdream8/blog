(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{247:function(v,_,i){"use strict";i.r(_);var l=i(28),e=Object(l.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"大厂面试题分类"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#大厂面试题分类"}},[v._v("#")]),v._v(" 大厂面试题分类")]),v._v(" "),i("h2",{attrs:{id:"js相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#js相关"}},[v._v("#")]),v._v(" js相关")]),v._v(" "),i("h3",{attrs:{id:"异步相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#异步相关"}},[v._v("#")]),v._v(" 异步相关")]),v._v(" "),i("ol",[i("li",[v._v("介绍各种异步方案，JS怎么实现异步")]),v._v(" "),i("li",[v._v("JS异步解决方案的发展历程以及优缺点")]),v._v(" "),i("li",[v._v("介绍promise及内部实现")]),v._v(" "),i("li",[v._v("介绍下Promise的用途和性质")]),v._v(" "),i("li",[v._v("Promise有几个状态，Promise的三种状态")]),v._v(" "),i("li",[v._v("介绍Promise的特性，优缺点,promise的精髓，以及优缺点")]),v._v(" "),i("li",[v._v("介绍Promise，异常捕获")]),v._v(" "),i("li",[v._v("介绍Promise和then")]),v._v(" "),i("li",[v._v("promise如何实现then处理")]),v._v(" "),i("li",[v._v("a，b两个按钮，点击aba，返回顺序可能是baa，如何保证是aba（Promise.then）")]),v._v(" "),i("li",[v._v("Promise有没有解决异步的问题（promise链是真正强大的地方）")]),v._v(" "),i("li",[v._v("Promise和Callback有什么区别")]),v._v(" "),i("li",[v._v("如何设计Promise.all()")]),v._v(" "),i("li",[v._v("Promise.all实现原理")]),v._v(" "),i("li",[v._v("promise async await 等异步的实现")]),v._v(" "),i("li",[v._v("使用Async会注意哪些东西")]),v._v(" "),i("li",[v._v("Promise和Async处理失败的时候有什么区别")]),v._v(" "),i("li",[v._v("Async里面有多个await请求，可以怎么优化（请求是否有依赖）")]),v._v(" "),i("li",[v._v("Promise 和 async/await 和 callback的区别")]),v._v(" "),i("li",[v._v("Async/Await怎么实现")]),v._v(" "),i("li",[v._v("对async、await的理解，内部原理")]),v._v(" "),i("li",[v._v("异步请求，低版本fetch如何低版本适配")]),v._v(" "),i("li",[v._v("异步整个执行周期")]),v._v(" "),i("li",[v._v("promise里面和then里面执行有什么区别")]),v._v(" "),i("li",[v._v("Promise构造函数是同步还是异步执行，then呢")]),v._v(" "),i("li",[v._v("Promise和setTimeout的区别（Event Loop）")]),v._v(" "),i("li",[v._v("setInterval需要注意的点")]),v._v(" "),i("li",[v._v("定时器为什么是不精确的")]),v._v(" "),i("li",[v._v("setTimeout(1)和setTimeout(2)之间的区别")]),v._v(" "),i("li",[v._v("Promise和setTimeout执行先后的区别")]),v._v(" "),i("li",[v._v("介绍宏任务和微任务，JS为什么要区分微任务和宏任务")])]),v._v(" "),i("h3",{attrs:{id:"跨域相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#跨域相关"}},[v._v("#")]),v._v(" 跨域相关")]),v._v(" "),i("ol",[i("li",[v._v("对跨域的了解")]),v._v(" "),i("li",[v._v("介绍下浏览器跨域")]),v._v(" "),i("li",[v._v("介绍同源策略")]),v._v(" "),i("li",[v._v("怎么去解决跨域问题")]),v._v(" "),i("li",[v._v("跨域怎么解决，有没有使用过Apache等方案")]),v._v(" "),i("li",[v._v("表单可以跨域吗")]),v._v(" "),i("li",[v._v("ajax如何处理跨域")]),v._v(" "),i("li",[v._v("Ajax发生跨域要设置什么（前端）")]),v._v(" "),i("li",[v._v("jsonp方案需要服务端怎么配合")]),v._v(" "),i("li",[v._v("jsonp为什么不支持post方法")]),v._v(" "),i("li",[v._v("CORS如何设置")]),v._v(" "),i("li",[v._v("加上CORS之后从发起到请求正式成功的过程")]),v._v(" "),i("li",[v._v("xsrf跨域攻击的安全性问题怎么防范")])]),v._v(" "),i("h2",{attrs:{id:"数据接口预算法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#数据接口预算法"}},[v._v("#")]),v._v(" 数据接口预算法")]),v._v(" "),i("h3",{attrs:{id:"数据结构相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#数据结构相关"}},[v._v("#")]),v._v(" 数据结构相关")]),v._v(" "),i("ol",[i("li",[v._v("项目中如何应用数据结构")]),v._v(" "),i("li",[v._v("项目中树的使用场景以及了解")]),v._v(" "),i("li",[v._v("如何判断链表是否有环")]),v._v(" "),i("li",[v._v("介绍二叉搜索树的特点")]),v._v(" "),i("li",[v._v("如何设计状态树")])]),v._v(" "),i("h2",{attrs:{id:"node相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#node相关"}},[v._v("#")]),v._v(" node相关")]),v._v(" "),i("ol",[i("li",[v._v("介绍koa2")]),v._v(" "),i("li",[v._v("koa-body原理")]),v._v(" "),i("li",[v._v("使用的koa中间件")]),v._v(" "),i("li",[v._v("常用的中间件")]),v._v(" "),i("li",[v._v("使用过的koa2中间件")]),v._v(" "),i("li",[v._v("koa2中间件原理")]),v._v(" "),i("li",[v._v("介绍自己写过的中间件")]),v._v(" "),i("li",[v._v("有没有涉及到Cluster")]),v._v(" "),i("li",[v._v("koa原理，为什么要用koa(express和koa对比")]),v._v(" "),i("li",[v._v("介绍pm2")]),v._v(" "),i("li",[v._v("master挂了的话pm2怎么处理")]),v._v(" "),i("li",[v._v("如何和MySQL进行通信")]),v._v(" "),i("li",[v._v("koa中response.send、response.rounded、response.json发生了什么事，浏览器为什么能识别到它是一个json结构或是html")]),v._v(" "),i("li",[v._v("koa-bodyparser怎么来解析request")]),v._v(" "),i("li",[v._v("knex连接数据库响应回调")]),v._v(" "),i("li",[v._v("node接口转发有无做什么优化")]),v._v(" "),i("li",[v._v("node起服务如何保证稳定性，平缓降级，重启等")]),v._v(" "),i("li",[v._v("node文件查找优先级")]),v._v(" "),i("li",[v._v("进程和线程的区别（一个node实例就是一个进程，node是单线程，通过事件循环来实现异步）")])]),v._v(" "),i("h2",{attrs:{id:"http相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http相关"}},[v._v("#")]),v._v(" http相关")]),v._v(" "),i("ol",[i("li",[v._v("介绍HTTPS")]),v._v(" "),i("li",[v._v("介绍http2.0")]),v._v(" "),i("li",[v._v("HTTP和HTTPS的区别")]),v._v(" "),i("li",[v._v("HTTPS怎么建立安全通道")]),v._v(" "),i("li",[v._v("HTTPS的加密过程")]),v._v(" "),i("li",[v._v("介绍SSL和TLS")]),v._v(" "),i("li",[v._v("介绍service worker")]),v._v(" "),i("li",[v._v("介绍DNS解析")]),v._v(" "),i("li",[v._v("网络的五层模型")]),v._v(" "),i("li",[v._v("http1.1时如何复用tcp连接")]),v._v(" "),i("li",[v._v("tcp3次握手")]),v._v(" "),i("li",[v._v("tcp属于哪一层（1 物理层 -> 2 数据链路层 -> 3 网络层(ip)-> 4 传输层(tcp) -> 5 应用层(http)）")]),v._v(" "),i("li",[v._v("从输入URL到页面加载全过程")]),v._v(" "),i("li",[v._v("http缓存控制")]),v._v(" "),i("li",[v._v("缓存相关的HTTP请求头")]),v._v(" "),i("li",[v._v("介绍下HTTP状态码")]),v._v(" "),i("li",[v._v("403、301、302、304是什么")]),v._v(" "),i("li",[v._v("Http报文的请求会有几个部分")]),v._v(" "),i("li",[v._v("常见Http请求头")]),v._v(" "),i("li",[v._v("通过什么做到并发请求")]),v._v(" "),i("li",[v._v("Access-Control-Allow-Origin在服务端哪里配置")]),v._v(" "),i("li",[v._v("服务端渲染SSR")]),v._v(" "),i("li",[v._v("csrf跨站攻击怎么解决")])]),v._v(" "),i("h2",{attrs:{id:"react相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#react相关"}},[v._v("#")]),v._v(" react相关")]),v._v(" "),i("ol",[i("li",[v._v("React声明周期及自己的理解")]),v._v(" "),i("li",[v._v("如何配置React-Router")]),v._v(" "),i("li",[v._v("路由的动态加载模块")]),v._v(" "),i("li",[v._v("介绍Redux数据流的流程")]),v._v(" "),i("li",[v._v("Redux如何实现多个组件之间的通信，多个组件使用相同状态如何进行管理")]),v._v(" "),i("li",[v._v("使用过的Redux中间件")]),v._v(" "),i("li",[v._v("介绍redux，主要解决什么问题")]),v._v(" "),i("li",[v._v("介绍react优化")]),v._v(" "),i("li",[v._v("React组件中怎么做事件代理")]),v._v(" "),i("li",[v._v("React组件事件代理的原理")]),v._v(" "),i("li",[v._v("React怎么做数据的检查和变化")]),v._v(" "),i("li",[v._v("redux请求中间件如何处理并发")]),v._v(" "),i("li",[v._v("react-router怎么实现路由切换")]),v._v(" "),i("li",[v._v("react-router里的标签和标签有什么区别")]),v._v(" "),i("li",[v._v("React层面的性能优化")]),v._v(" "),i("li",[v._v("Redux中异步的请求怎么处理")]),v._v(" "),i("li",[v._v("Redux中间件是什么东西，接受几个参数（两端的柯里化函数）")]),v._v(" "),i("li",[v._v("state是怎么注入到组件的，从reducer到组件经历了什么样的过程")]),v._v(" "),i("li",[v._v("如何做RN在安卓和IOS端的适配")]),v._v(" "),i("li",[v._v("RN为什么能在原生中绘制成原生组件（bundle.js）")]),v._v(" "),i("li",[v._v("Redux在状态管理方面解决了React本身不能解决的问题")]),v._v(" "),i("li",[v._v("Redux有没有做过封装")]),v._v(" "),i("li",[v._v("react生命周期，常用的生命周期")]),v._v(" "),i("li",[v._v("写react有哪些细节可以优化")]),v._v(" "),i("li",[v._v("React的事件机制（绑定一个事件到一个组件上）")]),v._v(" "),i("li",[v._v("React/Redux中哪些功能用到了哪些设计模式")]),v._v(" "),i("li",[v._v("React子父组件之间如何传值")]),v._v(" "),i("li",[v._v("介绍下React高阶组件，和普通组件有什么区别")]),v._v(" "),i("li",[v._v("一个对象数组，每个子对象包含一个id和name，React如何渲染出全部的name")]),v._v(" "),i("li",[v._v("在哪个生命周期里写")]),v._v(" "),i("li",[v._v("其中有几个name不存在，通过异步接口获取，如何做")]),v._v(" "),i("li",[v._v("介绍Fiber")]),v._v(" "),i("li",[v._v("shouldComponentUpdate是为了解决什么问题")]),v._v(" "),i("li",[v._v("react中的key的作用")]),v._v(" "),i("li",[v._v("native提供了什么能力给RN")]),v._v(" "),i("li",[v._v("React中Dom结构发生变化后内部经历了哪些变化")]),v._v(" "),i("li",[v._v("React挂载的时候有3个组件，textComponent、composeComponent、domComponent，区别和关系，Dom结构发生变化时怎么区分data的变化，怎么更新，更新怎么调度，如果更新的时候还有其他任务存在怎么处理")]),v._v(" "),i("li",[v._v("redux的设计思想")]),v._v(" "),i("li",[v._v("接入redux的过程")]),v._v(" "),i("li",[v._v("react异步渲染的概念,介绍Time Slicing 和 Suspense")]),v._v(" "),i("li",[v._v("react性能优化")]),v._v(" "),i("li",[v._v("react生命周期")]),v._v(" "),i("li",[v._v("React使用过的一些组件")]),v._v(" "),i("li",[v._v("介绍Immuable")]),v._v(" "),i("li",[v._v("介绍下redux整个流程原理")]),v._v(" "),i("li",[v._v("React声明周期")]),v._v(" "),i("li",[v._v("Redux状态管理器和变量挂载到window中有什么区别")]),v._v(" "),i("li",[v._v("React数据流")]),v._v(" "),i("li",[v._v("对React看法，有没有遇到一些坑")]),v._v(" "),i("li",[v._v("react设计思路")]),v._v(" "),i("li",[v._v("redux状态树的管理")]),v._v(" "),i("li",[v._v("react常见的通信方式")]),v._v(" "),i("li",[v._v("redux整体的工作流程")]),v._v(" "),i("li",[v._v("redux和全局对象之间的区别")]),v._v(" "),i("li",[v._v("Redux数据回溯设计思路")]),v._v(" "),i("li",[v._v("react性能优化")]),v._v(" "),i("li",[v._v("介绍pureComponet")]),v._v(" "),i("li",[v._v("props和state的区别")]),v._v(" "),i("li",[v._v("介绍react context")]),v._v(" "),i("li",[v._v("React15/16.x的区别")]),v._v(" "),i("li",[v._v("重新渲染render会做些什么")]),v._v(" "),i("li",[v._v("哪些方法会触发react重新渲染")]),v._v(" "),i("li",[v._v("state和props触发更新的生命周期分别有什么区别")]),v._v(" "),i("li",[v._v("setState是同步还是异步")]),v._v(" "),i("li",[v._v("对无状态组件的理解")]),v._v(" "),i("li",[v._v("介绍Redux工作流程")]),v._v(" "),i("li",[v._v("对react看法，它的优缺点")]),v._v(" "),i("li",[v._v("使用过程中遇到的问题，如何解决的")]),v._v(" "),i("li",[v._v("react的理念是什么（拿函数式编程来做页面渲染）")]),v._v(" "),i("li",[v._v("介绍redux接入流程")]),v._v(" "),i("li",[v._v("rudux和全局管理有什么区别（数据可控、数据响应）")]),v._v(" "),i("li",[v._v("RN和原生通信")]),v._v(" "),i("li",[v._v("RN有没有做热加载")]),v._v(" "),i("li",[v._v("RN遇到的兼容性问题")]),v._v(" "),i("li",[v._v("RN如何实现一个原生的组件")]),v._v(" "),i("li",[v._v("RN混原生和原生混RN有什么不同")]),v._v(" "),i("li",[v._v("RN的原理，为什么可以同时在安卓和IOS端运行")]),v._v(" "),i("li",[v._v("RN如何调用原生的一些功能")]),v._v(" "),i("li",[v._v("介绍RN的缺点")]),v._v(" "),i("li",[v._v("React中setState后发生了什么")]),v._v(" "),i("li",[v._v("setState为什么默认是异步")]),v._v(" "),i("li",[v._v("setState什么时候是同步的")]),v._v(" "),i("li",[v._v("React的生命周期")]),v._v(" "),i("li",[v._v("componentWillReceiveProps的触发条件是什么")]),v._v(" "),i("li",[v._v("React16.3对生命周期的改变")]),v._v(" "),i("li",[v._v("介绍下React的Filber架构")]),v._v(" "),i("li",[v._v("画Filber渲染树")]),v._v(" "),i("li",[v._v("介绍React高阶组件")]),v._v(" "),i("li",[v._v("父子组件之间如何通信")]),v._v(" "),i("li",[v._v("Redux怎么实现属性传递，介绍下原理")]),v._v(" "),i("li",[v._v("React-Router版本号")]),v._v(" "),i("li",[v._v("pureComponent和FunctionComponent区别")])])])}),[],!1,null,null,null);_.default=e.exports}}]);