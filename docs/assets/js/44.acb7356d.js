(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{283:function(e,t,o){"use strict";o.r(t);var s=o(28),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"webpack学习-天宝"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#webpack学习-天宝"}},[e._v("#")]),e._v(" webpack学习-天宝")]),e._v(" "),o("h2",{attrs:{id:"scope-hoisting的理解"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#scope-hoisting的理解"}},[e._v("#")]),e._v(" Scope Hoisting的理解")]),e._v(" "),o("blockquote",[o("p",[e._v("原理：将所有模块的代码按照引用顺序放在一个函数作用域里 ，然后适当的重命名一些变量以防止变量名冲突。通过scope hoisting可减少函数声明代码合内存开销。")])]),e._v(" "),o("p",[e._v("如果不开启scope hoisting，会导致大量作用域包裹代码，导致体积增大（模块越多越明显），运行代码时创建的函数作用域变多（大量的IIFE匿名闭包），内存开销大。")]),e._v(" "),o("ul",[o("li",[e._v("Webpack4环境，配置参数mode为production(即生产环境)时，默认开启了scope hoisting功能。")]),e._v(" "),o("li",[e._v("Webpack3环境，需要在plugins里手动配置，"),o("code",[e._v("new webpack.optimize.ModuleConcatenationPlugin()")]),e._v("，会将es6里的import转换成__webpack__require__，export转换成__webpack_exports__。")])])])}),[],!1,null,null,null);t.default=i.exports}}]);